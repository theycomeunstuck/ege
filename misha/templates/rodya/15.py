'''наименьшая/наибольшая длина
A = 0; если наименьшая длина
A = 1; если наибольшая длина

вариант без подъёба
'''

#x принадлежит D заменяется {D = 7 <= x <= 68} строкой, so we just type variable
for x in [k * 0.25 for k in range(-10000,10000)]:
    D = 7 <= x <= 68
    C = 29 <= x <= 100
    A = 0 #
    f = D <= (((not C) and (not A)) <= (not D))
    if f != 1: #!= УКАЗАНО В УСЛОВИИ 0/1
        # print(x) #[7;29) == !22!
        pass

'''подъёб в виде разрыва (пропуск какого-то целого числа, являющимся крайним для какого-либо промежутка)'''
for x in [k * 0.25 for k in range(-10000, 10000)]:
    p = 3 <= x <= 15
    q = 14 <= x <= 25
    a = 1
    f = (p == q) <= (not a)
    if f != 0: #в условии - функция ложна

        # print(x) #нет числа 14.0. два отрезка [3,14) u [15,25)
        #длина 11 и 10 -- ответ 11
        pass
        ''' если взять х на промежутке [15,25), то это не повлияет на ответ в f, так что макс. длина - 11'''

#Определите наибольшее количество элементов множ. А
c =0
for x in [k * 0.25 for k in range(-10000, 10000)]:
    p = x in [2,4,5,6,8,10,12,14,16,18,20]
    q = x in [3,6,9,12,15,18,21,24,27,30]
    A = 1
    f = (A <= p) and ((not q) <= (not A))
    if f != 0:
        c += 1
        print(x)
print(c)  #ответ: 3
'''ахуеть какой разрыв (анализ)'''

for x in [k * 0.25 for k in range(-10000, 10000)]:
    b = 23 <= x <= 37
    c = 41 <= x <= 73
    a = 0
    f = not (((not b) <= c ) <= a)
    if f!= 0 : #в условии - функция ложна
        # print(x) #два промежутка [23, 37] = 14  и   [41,73] = 32
        pass
        '''
        анализ:  если х будет лежать на  том отрезке, который мы не взяли, то f != 0 не выполняется
        тогда выходит, что отрезок принадлежит [23,73] == 50
        '''

'''все остальные шаблоны'''


def f(x,y,A):
    return (x + 2*y < A) or (y > x) or (x > 60)

# print(min(A for A in range(0,200) if all(f(x,y, A) == 1 for x in range(0, 2000) for y in range(0,2000))))

'''
приоритет

1) not
2) * (and)
3) or 
4) <= 
5) not'''

'''
ValueError: min() iterable argument is empty - поставить значения перебора больше
'''